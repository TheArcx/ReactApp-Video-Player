{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daljit\\\\nodejs\\\\videos\\\\src\\\\Components\\\\App.js\";\nimport React from 'react';\nimport SearchBar from \"./SearchBar\";\nimport youtube from '../api/youtube';\nimport VideoList from './VideoList'; // It will use state so it is a class app\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videos: [],\n      selectedVideo: null\n    };\n\n    this.onTermSubmit = async term => {\n      const response = await youtube.get('/search', {\n        params: {\n          q: term\n        }\n      });\n      this.setState({\n        videos: response.data.items\n      });\n    };\n\n    this.onVideoSelect = video => {\n      this.setState({\n        selectedVideo: video\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui container\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        onFormSubmit: this.onTermSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(VideoList, {\n        onVideoSelect: this.onVideoSelect,\n        videos: this.state.videos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["C:/Users/Daljit/nodejs/videos/src/Components/App.js"],"names":["React","SearchBar","youtube","VideoList","App","Component","state","videos","selectedVideo","onTermSubmit","term","response","get","params","q","setState","data","items","onVideoSelect","video","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CAGA;;;;AACA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAC7BC,KAD6B,GACrB;AAAEC,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,aAAa,EAAE;AAA7B,KADqB;;AAAA,SAI7BC,YAJ6B,GAId,MAAOC,IAAP,IAAgB;AAC3B,YAAMC,QAAQ,GAAG,MAAMT,OAAO,CAACU,GAAR,CAAY,SAAZ,EAAuB;AAC1CC,QAAAA,MAAM,EAAE;AACJC,UAAAA,CAAC,EAAEJ;AADC;AADkC,OAAvB,CAAvB;AAKA,WAAKK,QAAL,CAAc;AAACR,QAAAA,MAAM,EAAEI,QAAQ,CAACK,IAAT,CAAcC;AAAvB,OAAd;AACH,KAX4B;;AAAA,SAe7BC,aAf6B,GAeZC,KAAD,IAAW;AACvB,WAAKJ,QAAL,CAAc;AAACP,QAAAA,aAAa,EAAEW;AAAhB,OAAd;AACH,KAjB4B;AAAA;;AAmB7BC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAG,cAAjB;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,YAAY,EAAI,KAAKX;AAAhC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AACI,QAAA,aAAa,EAAE,KAAKS,aADxB;AAEI,QAAA,MAAM,EAAI,KAAKZ,KAAL,CAAWC;AAFzB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AA7B4B;;AA8BhC;AAED,eAAeH,GAAf","sourcesContent":["import React from 'react';\r\nimport SearchBar from \"./SearchBar\";\r\nimport youtube from '../api/youtube';\r\nimport VideoList from './VideoList';\r\n\r\n\r\n// It will use state so it is a class app\r\nclass App extends React.Component{\r\n    state = { videos: [], selectedVideo: null};\r\n\r\n    // Async function to wait for the api response\r\n    onTermSubmit = async (term) => {\r\n        const response = await youtube.get('/search', {\r\n            params: {\r\n                q: term\r\n            }\r\n        });\r\n        this.setState({videos: response.data.items });\r\n    };\r\n\r\n    // Nested callback function to swap the current playing video\r\n    // It is sent down as a props see line in render()\r\n    onVideoSelect = (video) => {\r\n        this.setState({selectedVideo: video});\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div className = \"ui container\">\r\n                <SearchBar onFormSubmit = {this.onTermSubmit}/>\r\n                <VideoList \r\n                    onVideoSelect={this.onVideoSelect} \r\n                    videos = {this.state.videos}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}